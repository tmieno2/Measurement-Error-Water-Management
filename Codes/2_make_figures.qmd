---
title: Create figures for the article
---


# Preparation 

## Load datasets

```{r}
system_data <- readRDS(here::here("Results/quota_results_comp_stat.rds"))

sum_res <-
  rbind(
    readRDS(here::here("Results/proxy_results_summary.rds")),
    readRDS(here::here("Results/water_results_summary.rds"))
  ) %>%
  .[, dir_cor_txt := paste0("Correlation: ", dir_cor)] %>%
  .[, dir_cor_txt := factor(dir_cor_txt, levels = paste0("Correlation: ", c("-", "0", "+")))] %>%
  .[, prod_het := str_to_title(prod_het)] %>%
  .[, prod_het := factor(prod_het, c("Zero", "Medium", "High"))]
```

Load prices and costs:

```{r}
load(here::here("Results/prices_costs.RData"))
```

# Visualize: Summary of Production Data

## Distribution of unconstrained optimal water use by heterogeneity degree

```{r}
(
  g_opt_w_dist <-
    system_data %>%
    dplyr::select(prod_het, farmer_data) %>%
    unnest(cols = c(farmer_data)) %>%
    data.table() %>%
    .[, type_txt := case_when(
      prod_het == "zero" ~ "Heterogeneity: Zero",
      prod_het == "medium" ~ "Heterogeneity: Medium",
      prod_het == "high" ~ "Heterogeneity: High"
    )] %>%
    .[, type_txt := factor(
      type_txt,
      levels = c("Heterogeneity: Zero", "Heterogeneity: Medium", "Heterogeneity: High")
    )] %>%
    .[opt_w_true < 30, ] %>%
    ggplot(data = .) +
    geom_histogram(
      aes(
        x = opt_w_true,
        y = ifelse(after_stat(count) > 0, after_stat(count), NA)
      ),
      color = "blue",
      fill = NA
    ) +
    facet_grid(type_txt ~ .) +
    xlab("Optimal Water Use (inches)") +
    ylab("Count") +
    scale_x_continuous(breaks = seq(0, 30, by = 2)) +
    theme_bw()
)

ggsave(here::here("Writing/figures/g_opt_w_dist.pdf"), g_opt_w_dist, height = 5, width = 6)
```


## Distribution of water-proxy conversion factor

```{r}
par_data <-
  readRDS("Results/parameter_data.rds") %>%
  .[u_dev != 0, ] %>%
  .[dir_cor == "0", ] %>%
  .[target_w == 7, ] %>%
  .[, ]

eta_data <-
  lapply(
    1:nrow(par_data),
    \(x) {
      quota_data <-
        make_quota_data(
          system_data$farmer_data[[1]],
          target_w = par_data[x, target_w],
          u_dev = par_data[x, u_dev],
          cor = par_data[x, dir_cor],
          num_it = 1
        ) %>%
        .[, u_dev := par_data[x, u_dev]]
    }
  ) %>%
  rbindlist() %>%
  .[, med_txt := case_when(
    u_dev == 0.1 ~ "ME: Low",
    u_dev == 0.3 ~ "ME: Medium",
    u_dev == 0.5 ~ "ME: High"
  )] %>%
  .[, med_txt := factor(med_txt, levels = c("ME: Low", "ME: Medium", "ME: High"))]

ggplot(eta_data) +
  geom_histogram(
    aes(
      x = proxy_to_water,
      y = ifelse(after_stat(count) > 0, after_stat(count), NA)
    ),
    color = "blue",
    fill = NA
  ) +
  facet_grid(med_txt ~ .) +
  theme_bw() +
  xlab("Water to proxy conversion factor") +
  ylab("Count")

```

# Visualize: Results

## Profitability: Water vs Proxy Quota (with comparative statistics wrt heterogeneity of farmers)

```{r}
w_p_plot_data <-
  sum_res %>%
  .[instrument_type == "Quota", ] %>%
  .[(dir_cor == "0" & u_dev == 0.3 & measure_type == "Proxy") | measure_type == "Water", ]

y_lims <- w_p_plot_data[, c(floor(min(profit / 10)), ceiling(max(profit / 10)))] * 10

(
  g_profit_quota_w_vs_p <-
    ggplot(data = w_p_plot_data) +
    geom_line(aes(y = profit, x = w, color = measure_type)) +
    facet_grid(. ~ prod_het) +
    ylab("Target Water Use (inches)") +
    xlab("Realized Water Use (inches)") +
    scale_color_discrete(name = "Measurement Type") +
    scale_y_continuous(
      breaks = seq(y_lims[1], y_lims[2], by = 10)
    ) +
    theme_bw() +
    theme(
      legend.position = "bottom"
    )
)

ggsave("Writing/figures/g_profit_quota_w_vs_p.pdf", g_profit_quota_w_vs_p, height = 3.5, width = 6)
```

## The effect of increasing the size of measurement error

```{r}
q_udev <- sum_res[(dir_cor == "0" & measure_type == "Proxy"), ]
w_udev <-
  sum_res[measure_type == "Water", ] %>%
  .[, u_dev := NULL] %>%
  expand_grid_df(., data.table(u_dev = c(0.1, 0.3, 0.5)))

quota_plot_data_comp_stat <-
  rbind(q_udev, w_udev) %>%
  .[instrument_type == "Quota", ]

y_lims <- quota_plot_data_comp_stat[, c(floor(min(profit / 10)), ceiling(max(profit / 10)))] * 10


(
  g_profit_quota_comp_stat <-
    ggplot(data = quota_plot_data_comp_stat) +
    geom_line(aes(y = profit, x = w, color = measure_type)) +
    facet_grid(u_dev ~ prod_het) +
    ylab("Profit ($/acre)") +
    xlab("Realized Water Use (inches)") +
    scale_color_discrete(name = "Measurement Type") +
    scale_y_continuous(
      breaks = seq(y_lims[1], y_lims[2], by = 10)
    ) +
    scale_x_continuous(breaks = 7:12) +
    theme_bw() +
    theme(
      legend.position = "bottom",
      panel.grid.minor = element_blank(),
      panel.spacing.y = unit(1, "lines")
    )
)

ggsave("Writing/figures/g_profit_quota_comp_stat.pdf", g_profit_quota_comp_stat, height = 6, width = 6)

ggsave("Writing/figures/g_profit_quota_comp_stat.png", g_profit_quota_comp_stat, width = 6, height = 6, dpi = 400)
```

## The effect of allowing trading quota

```{r}
#| echo: false
q_temp <- sum_res[(dir_cor == "0" & u_dev != 0 & measure_type == "Proxy"), ]
w_temp <-
  sum_res[measure_type == "Water", ] %>%
  .[, u_dev := NULL] %>%
  expand_grid_df(., data.table(u_dev = c(0.1, 0.3, 0.5)))

trading_plot_data <-
  rbind(w_temp, q_temp) %>%
  .[, type := paste0(measure_type, "-", instrument_type)]

y_lims <- trading_plot_data[, c(floor(min(profit / 10)), ceiling(max(profit / 10)))] * 10

(
  g_trade_effect_profit <-
    ggplot(data = trading_plot_data) +
    geom_line(aes(y = profit, x = w, color = type)) +
    facet_grid(u_dev ~ prod_het) +
    scale_color_brewer(palette = "Set1") +
    ylab("Profit ($/acre)") +
    xlab("Realized Water Use (inches)") +
    scale_color_discrete(name = "Measurement Type") +
    guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
    theme_bw() +
    scale_y_continuous(
      breaks = seq(y_lims[1], y_lims[2], by = 10)
    ) +
    scale_x_continuous(breaks = 7:12) +
    theme_bw() +
    theme(
      legend.position = "bottom",
      panel.grid.minor = element_blank(),
      panel.spacing.y = unit(1, "lines")
    )
)

ggsave("Writing/figures/g_trade_effect_profit.pdf", g_trade_effect_profit, height = 6, width = 6)
```

## Profit Ratio (distributional inequality)

```{r}
profit_ratio <- readRDS(here::here("Results/profit_ratio.rds"))

x_breaks <- seq(0.2, ceiling(profit_ratio[, max(ratio)]), by = 0.4)

(
  g_profit_ratio <-
    ggplot(profit_ratio) +
    geom_line(aes(x = ratio, y = prob, color = instrument_type)) +
    facet_grid(u_dev ~ prod_het) +
    xlab("Ratio of Profit under Proxy-based to Water-based systems") +
    ylab("Cumulative Probability") +
    scale_color_discrete(name = "Insturment Type") +
    theme_bw() +
    scale_x_continuous(breaks = x_breaks) +
    scale_y_continuous(breaks = seq(0, 1, by = 0.25)) +
    theme(
      legend.position = "bottom",
      panel.grid.minor = element_blank(),
      panel.spacing.y = unit(0.5, "lines"),
      panel.spacing.x = unit(0.6, "lines")
    )
)
ggsave("Writing/figures/g_profit_ratio.pdf", g_profit_ratio, height = 6, width = 6)
```


# Visualize: Illustration

Here, illustrative figures to gain insights into the underlying economic intuitions of the results are created.

## Homogeneous farmers under quota

Use the first farmer under the category of `prod_het == "medium"`. It is duplicated to be farmers A and B. 

Under the water quota system, both farmers A and B will be given water quota of 7.

```{r}
#| echo: false

w_A <- 7 # water quota for farmer A
w_B <- 7 # water quota for farmer B
```

Under the proxy quota system, both farmers A and B will be given proxy quota of 7. However, the effective water quota for them are different and defined down below.

```{r}
eW_A <- 4 # effective water quota for farmer A
eW_B <- 10 # effective water for farmer B
```

Farmer A is unfairly treated with its water use over-estimated. Specifically, 1 proxy quota is equivalent to `eW_A/w_A` (`r eW_A/w_A`). On the other hand, farmer B is lucky with its water use under-estimated. Specifically, 1 proxy quota is equivalent to `eW_B/w_B` (`r eW_B/w_B`).

$$
P_A = \frac{7 \cdot W_A}{4}
P_B = \frac{7 \cdot W_B}{10}
$$


Create farmer production data.

```{r}
farm_data_1 <-
  data.table(system_data)[prod_het == "medium", farmer_data][[1]] %>%
  #--- use farmer 1 ---#
  .[farmer == 1, ] %>%
  .[, farmer := NULL] %>%
  expand_grid_df(., data.table(w = seq(0, 15, by = 0.1))) %>%
  .[, yield := ymax * (1 - alpha * exp(-beta * w))] %>%
  .[, w_cost := w_price * w] %>%
  .[, profit := corn_price * yield - w_cost - other_cost] %>%
  .[, marginal_cost_w := w_price] %>%
  .[, marginal_prod_w := ymax * alpha * beta * exp(-beta * w)] %>%
  .[, marginal_profit_w := marginal_prod_w * corn_price - marginal_cost_w]
```

Make production data at the quota level.

```{r}
opt_w <- unique(farm_data_1$opt_w)

production_at_quota <-
  data.table(
    farmer = c("A", "B", "A", "B"),
    measure_type = c("Water", "Water", "Proxy", "Proxy"),
    quota = c(w_A, w_B, eW_A, eW_B)
  ) %>%
  .[, w := quota] %>%
  .[quota > opt_w, w := opt_w] %>%
  farm_data_1[., on = .(w), roll = "nearest"] %>%
  .[, instrument_type := "Quota"]
```

Visualize the production data.

```{r}
#| warning: false
(
  g_illustration_homogeneous <-
    ggplot() +
    geom_line(
      data = farm_data_1,
      aes(y = profit, x = w)
    ) +
    geom_vline(
      data = production_at_quota,
      aes(xintercept = quota),
      linetype = 2,
      color = "red"
    ) +
    geom_point(
      data = production_at_quota,
      aes(y = profit, x = w),
      color = "blue",
      size = 2
    ) +
    facet_grid(measure_type ~ farmer) +
    ylim(0, NA) +
    xlab("Water Use (inches)") +
    ylab("Profit ($/acre)") +
    theme_bw() +
    scale_x_continuous(breaks = 0:15) +
    scale_y_continuous(
      breaks = (0:10) * 50,
      limits = c(0, NA)
    ) +
    theme(
      legend.position = "bottom",
      panel.grid.minor = element_blank()
    )
)

ggsave("Writing/figures/g_illustration_homogeneous.pdf", g_illustration_homogeneous, height = 4.5, width = 6.5)
```

## Homogeneous farmers under quota trading

Illustrate the effect of allowing proxy trading. Water trading does not happen as it is always optimal.

Create production data for two homogeneous farmers. They differ in water/proxy ratio. 

For farmer A,

$$
P_A = \frac{7 \cdot W_A}{4}
$$

$$
\frac{\partial \pi}{\partial p} =  \frac{\partial \pi}{\partial w} \cdot \frac{\partial w}{\partial p} = \frac{\partial \pi}{\partial w} \cdot \frac{4}{7}
$$


```{r}
farm_data_A <-
  copy(farm_data_1) %>%
  .[, farmer := "A"] %>%
  .[, marginal_profit_p := marginal_profit_w / w_A * eW_A]

farm_data_B <-
  copy(farm_data_1) %>%
  .[, farmer := "B"] %>%
  .[, marginal_profit_p := marginal_profit_w / w_B * eW_B]
```

Find the results of proxy quota trading, at which the marginal profit of proxy is equalized between the farmers.

```{r}
#--- link water use and marginal profit of proxy  ---#
mpp_w_A <- gam(w ~ s(marginal_profit_p), data = farm_data_A)
mpp_w_B <- gam(w ~ s(marginal_profit_p), data = farm_data_B)

#--- proxy quota trading results ---#
w_data <-
  data.table(
    marginal_profit_p = seq(0, min(farm_data_A[, max(marginal_profit_p)], farm_data_B[, max(marginal_profit_p)]), length = 1001)
  ) %>%
  .[, w_A := predict(mpp_w_A, newdata = .)] %>%
  .[, w_B := predict(mpp_w_B, newdata = .)] %>%
  .[, tot_w := w_A + w_B] %>%
  .[, dev := abs(tot_w - 14)] %>%
  .[dev == min(dev), ]
```

Associate profit to the water use levels observed under the proxy quota trading.

```{r}
pi_w_A <- gam(profit ~ s(w), data = farm_data_A)
pi_w_B <- gam(profit ~ s(w), data = farm_data_B)

proxy_trade_data_A <-
  data.table(w = w_data$w_A) %>%
  .[, profit := predict(pi_w_A, newdata = .)] %>%
  .[, farmer := "A"]

proxy_trade_data_B <-
  data.table(w = w_data$w_B) %>%
  .[, profit := predict(pi_w_B, newdata = .)] %>%
  .[, farmer := "B"]

proxy_trade_data <-
  rbind(proxy_trade_data_A, proxy_trade_data_B) %>%
  .[, measure_type := "Proxy"] %>%
  .[, instrument_type := "Trading"]
```

Visualize the trading results.

```{r}
(
  g_illustration_homogeneous_with_trade <-
    ggplot() +
    geom_line(
      data = farm_data_1,
      aes(y = profit, x = w)
    ) +
    geom_vline(
      data = production_at_quota,
      aes(xintercept = quota),
      linetype = 2,
      color = "blue",
      linewidth = 0.4
    ) +
    geom_vline(
      data = proxy_trade_data,
      aes(xintercept = w),
      linetype = 2,
      color = "blue",
      linewidth = 0.4
    ) +
    geom_point(
      data = production_at_quota,
      aes(y = profit, x = w, color = instrument_type),
      size = 3
    ) +
    geom_point(
      data = proxy_trade_data,
      aes(x = w, y = profit, color = instrument_type),
      size = 3
    ) +
    geom_segment(
      data = data.table(
        x = production_at_quota[measure_type == "Proxy", w],
        y = c(200, 200),
        xend = proxy_trade_data[measure_type == "Proxy", w],
        yend = c(200, 200),
        measure_type = c("Proxy", "Proxy"),
        farmer = c("A", "B")
      ),
      aes(x = x, y = y, xend = xend, yend = yend),
      arrow = arrow(length = unit(0.3, "cm"))
    ) +
    facet_grid(measure_type ~ farmer) +
    xlab("Water Use (inches)") +
    ylab("Profit ($/acre)") +
    theme_bw() +
    scale_color_discrete(name = "Instrument Type") +
    scale_x_continuous(breaks = 0:15) +
    scale_y_continuous(
      breaks = (0:10) * 50,
      limits = c(0, NA)
    ) +
    theme(
      legend.position = "bottom",
      panel.grid.minor = element_blank()
    )

)

ggsave("Writing/figures/g_illustration_homogeneous_with_trade.pdf", g_illustration_homogeneous_with_trade, height = 5, width = 6.5)
```

## Heterogeneous farmers under quota

```{r}
farm_data_het <-
  data.table(system_data)[prod_het == "medium", farmer_data][[1]] %>%
  #--- pick the farmers whose optimal water use is 7 and 13 ---#
  .[, dev_from_7 := abs(opt_w - 7)] %>%
  .[, dev_from_13 := abs(opt_w - 13)] %>%
  .[(dev_from_7 == min(dev_from_7) | dev_from_13 == min(dev_from_13)), ] %>%
  expand_grid_df(., data.table(w = seq(0, 15, by = 0.1))) %>%
  #--- production data ---#
  .[, yield := ymax * (1 - alpha * exp(-beta * w))] %>%
  .[, w_cost := w_price * w] %>%
  .[, profit := corn_price * yield - w_cost - other_cost] %>%
  .[, marginal_cost_w := w_price] %>%
  .[, marginal_prod_w := ymax * alpha * beta * exp(-beta * w)] %>%
  .[, marginal_profit_w := marginal_prod_w * corn_price - marginal_cost_w] %>%
  .[, farmer_txt := "A"] %>%
  .[opt_w == max(opt_w), farmer_txt := "B"]
```

Production data at the quota levels.

```{r}
opt_w <- farm_data_het[, .(opt_w = unique(opt_w)), by = farmer_txt]

quota_data_het <-
  data.table(
    farmer_txt = c("A", "B", "A", "B"),
    measure_type = c("Water", "Water", "Proxy", "Proxy"),
    quota = c(w_A, w_B, eW_A, eW_B)
  ) %>%
  opt_w[., on = .(farmer_txt)] %>%
  .[, w := quota] %>%
  .[quota > opt_w, w := opt_w] %>%
  setnames("farmer_txt", "farmer_id") %>%
  nest_by(farmer_id) %>%
  dplyr::mutate(merged = list(
    farm_data_het[farmer_txt == farmer_id, ][data.table(data), on = .(w), roll = "nearest"]
  )) %>%
  dplyr::select(farmer_id, merged) %>%
  unnest(cols = c(merged)) %>%
  data.table() %>%
  .[, .(farmer, farmer_txt, w, opt_w, profit, measure_type, quota)]
```

Visualize the production data.

```{r}
#| warning: false
(
  g_illustration_het <-
    ggplot() +
    geom_line(
      data = farm_data_het,
      aes(y = profit, x = w)
    ) +
    geom_vline(
      data = quota_data_het,
      aes(xintercept = quota),
      linetype = 2,
      color = "red"
    ) +
    geom_point(
      data = quota_data_het,
      aes(y = profit, x = w),
      color = "blue",
      size = 2
    ) +
    facet_grid(measure_type ~ farmer_txt) +
    ylim(0, NA) +
    xlab("Water Use (inches)") +
    ylab("Profit ($/acre)") +
    theme_bw() +
    scale_x_continuous(breaks = 0:15) +
    scale_y_continuous(
      breaks = (0:10) * 50,
      limits = c(0, NA)
    ) +
    theme(
      legend.position = "bottom",
      panel.grid.minor = element_blank()
    )
)

ggsave("Writing/figures/g_illustration_het.pdf", g_illustration_het, height = 4.5, width = 6.5)
```

## Save all the illustration datasets

```{r}
save(production_at_quota, proxy_trade_data, farm_data_het, quota_data_het, farm_data_1, file = "Results/illustration_data.RData")
```